{"version":3,"file":"static/js/720.dc9a86a8.chunk.js","mappings":"6MAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,G,0DIC/E,SAASC,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KAA+BC,MAAK,SAAAC,GAChCJ,GAAU,SAAAD,GAAM,kBAAQA,GAAR,EAAmBK,EAAKC,kBAE7C,KAGC,+BACI,6BACI,4CACA,eAAIC,UAAWC,EAAAA,EAAAA,OAAf,SACKR,GAAUA,EAAOS,KAAI,SAAAC,GAAK,OACvB,eAAmBH,UAAWC,EAAAA,EAAAA,OAA9B,UACI,SAAC,KAAD,CACID,UAAWC,EAAAA,EAAAA,SAEXG,GAAE,kBAAaD,EAAME,IAHzB,SAIKF,EAAMG,SALNH,EAAME,gB,oLCrBjCE,EAAW,+BACXC,EAAW,mCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACwBC,MAAMF,EAAKC,GADnC,YACOE,EADP,QAEiBC,GAFjB,iCAGUD,EAASE,OAHnB,gDAIIC,QAAQC,OAAO,IAAIC,MAAM,cAJ7B,2GAOO,SAASC,IACf,OAAOV,EAAuB,GAAD,OACzBF,EADyB,uCACcC,IAKrC,SAASY,EAAkBC,GACjC,OAAOZ,EAAuB,GAAD,OACzBF,EADyB,kBACPc,EADO,oBACYb,IAKnC,SAASc,EAAoBC,GACnC,OAAOd,EAAuB,GAAD,OACzBF,EADyB,iCACQC,EADR,kBAC0Be,IAKjD,SAASC,EAAkBH,GACjC,OAAOZ,EAAuB,GAAD,OACzBF,EADyB,kBACPc,EADO,4BACoBb,IAK3C,SAASiB,EAAkBJ,GACjC,OAAOZ,EAAuB,GAAD,OACzBF,EADyB,kBACPc,EADO,4BACoBb,M,kBCvClD,KAAgB,OAAS,sBAAsB,OAAS,sBAAsB,SAAW,wBAAwB,MAAQ,qBAAqB,OAAS,sBAAsB,SAAW,wBAAwB,UAAY,yBAAyB,eAAiB,8BAA8B,gBAAkB,+BAA+B,OAAS,sBAAsB,SAAW,wBAAwB,sBAAwB,qCAAqC,YAAc","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components /pages/HomePage.jsx","components /services/MovieAPI.js","webpack://goit-react-hw-05-movies/./src/components /pages/pages.module.css?407a"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as movieApi from '../services/MovieAPI'\nimport s from './pages.module.css';\n\n\nexport default function HomePage() {\n    const [trends, setTrends] = useState([]);\n\n    useEffect(() => {\n        movieApi.fetchTrendingMovies().then(data => {\n            setTrends(trends => [...trends, ...data.results])\n        })  \n    }, [])\n    \n    return (\n        <> \n            <main>\n                <h1>Trending today</h1>\n                <ul className={s.ulHome}>\n                    {trends && trends.map(trend => (\n                        <li key={trend.id} className={s.liHome}>\n                            <Link\n                                className={s.linkHome}\n                                // state={{from:location}}\n                                to={`/movies/${trend.id}`}>\n                                {trend.title}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </main>\n        </>\n    );\n}\n \n","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst BASE_KEY = \"d1f189301a26d9afb286d4403cc9e763\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n const response = await fetch(url, config);\n return response.ok\n  ? await response.json()\n  : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovies() {\n return fetchWithErrorHandling(\n  `${BASE_URL}/trending/movie/day?api_key=${BASE_KEY}`\n );\n}\n// List of trending movies on HomePage\n\nexport function fetchMovieDetails(movieId) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}`\n );\n}\n// Movie Details by click\n\nexport function fetchMovieByKeyWord(movie) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/search/movie?api_key=${BASE_KEY}&query=${movie}`\n );\n}\n// Search Movie by name in MoviesPage\n\nexport function fetchMovieCredits(movieId) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}`\n );\n}\n// Casts on movie's page\n\nexport function fetchMovieReviews(movieId) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}`\n );\n}\n// Reviews on movie's page\n","// extracted by mini-css-extract-plugin\nexport default {\"ulHome\":\"pages_ulHome__129Y5\",\"liHome\":\"pages_liHome__eifpZ\",\"linkHome\":\"pages_linkHome__Lu0RR\",\"input\":\"pages_input__mTDRb\",\"button\":\"pages_button__TTU-1\",\"formList\":\"pages_formList__9W1Cr\",\"linkMovie\":\"pages_linkMovie__RjA0T\",\"containerMovie\":\"pages_containerMovie__OvJQu\",\"filmInformation\":\"pages_filmInformation__7FOrl\",\"genres\":\"pages_genres__w5kHH\",\"genresLi\":\"pages_genresLi__yySWV\",\"additionalInformation\":\"pages_additionalInformation__WtEQp\",\"listOfCasts\":\"pages_listOfCasts__o1IAs\"};"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","HomePage","useState","trends","setTrends","useEffect","movieApi","then","data","results","className","s","map","trend","to","id","title","BASE_URL","BASE_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieDetails","movieId","fetchMovieByKeyWord","movie","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}
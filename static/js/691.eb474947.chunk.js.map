{"version":3,"file":"static/js/691.eb474947.chunk.js","mappings":"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","sources":["components /pages/Cast.jsx","components /pages/Reviews.jsx","components /pages/MoviesDetailsPage.jsx","components /services/MovieAPI.js","webpack://goit-react-hw-05-movies/./src/components /pages/pages.module.css?407a"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as movieApi from \"../services/MovieAPI\";\nimport s from \"./pages.module.css\";\n\nexport default function Cast() {\n const { movieId } = useParams();\n const [cast, setCast] = useState([]);\n\n useEffect(() => {\n  movieApi.fetchMovieCredits(movieId).then(({ cast }) => setCast(cast));\n }, [movieId]);\n console.log(cast);\n return (\n  <>\n   <ul className={s.listOfCasts}>\n    {cast &&\n     cast.map((cas) => (\n      <li key={cas.id}>\n       <img\n        src={\n         cas.profile_path ? (\n          `https://www.themoviedb.org/t/p/w185${cas.profile_path}`\n         ) : (\n          <p>Photo</p>\n         )\n        }\n        width=\"100px\"\n       />\n       <h3>{cas.name}</h3>\n       <p>Character: {cas.character}</p>\n      </li>\n     ))}\n   </ul>\n  </>\n );\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as movieApi from \"../services/MovieAPI\";\n\nexport default function Reviews() {\n const { movieId } = useParams();\n const [review, setReview] = useState([]);\n\n useEffect(() => {\n  movieApi.fetchMovieReviews(movieId).then(({ results }) => setReview(results));\n }, [movieId]);\n\n return (\n  <>\n   {review.length === 0 ? (\n    <p>Sorry, we don't have any reviews for this movie</p>\n   ) : (\n    <ul>\n     {review.map((rev) => (\n      <li key={rev.id}>\n       <h4>Author: {rev.author}</h4>\n       <p>{rev.content}</p>\n      </li>\n     ))}\n    </ul>\n   )}\n  </>\n );\n}\n","import { useState, useEffect } from \"react\";\nimport { Link, Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport * as movieApi from \"../services/MovieAPI\";\nimport Cast from \"./Cast\";\nimport Reviews from \"./Reviews\";\nimport s from \"./pages.module.css\";\n\nexport default function MoviesDetailsPage() {\n const [movie, setMovie] = useState(null);\n const { movieId } = useParams();\n const navigate = useNavigate();\n\n useEffect(() => {\n  movieApi.fetchMovieDetails(movieId).then(setMovie);\n }, [movieId]);\n\n console.log(movie);\n return (\n  <>\n   <button type=\"button\" onClick={() => navigate(\"/\")}>\n    Back\n   </button>\n   {movie && (\n    <>\n     <div className={s.containerMovie}>\n      <img\n       src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n       alt=\"\"\n       width=\"300px\"\n       height=\"350px\"\n      />\n\n      <div className={s.filmInformation}>\n       <h1 className={s.titleMovie}>{movie.title}</h1>\n       <p>User score: {movie.vote_average}</p>\n       <h3>Overview</h3>\n       <p>{movie.overview}</p>\n       <h3>Genres</h3>\n       {movie.genres && (\n        <ul className={s.genres}>\n         {movie.genres.map((genre) => (\n          <li key={genre.id} className={s.genresLi}>\n           {genre.name}\n          </li>\n         ))}\n        </ul>\n       )}\n      </div>\n     </div>\n     <ul className={s.additionalInformation}>\n      Additional information\n      <li>\n       <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n      </li>\n      <li>\n       <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n      </li>\n     </ul>\n    </>\n   )}\n   <Routes>\n    <Route path=\"cast\" element={<Cast />} />\n    <Route path=\"reviews\" element={<Reviews />} />\n   </Routes>\n  </>\n );\n}\n","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst BASE_KEY = \"d1f189301a26d9afb286d4403cc9e763\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n const response = await fetch(url, config);\n return response.ok\n  ? await response.json()\n  : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovies() {\n return fetchWithErrorHandling(\n  `${BASE_URL}/trending/movie/day?api_key=${BASE_KEY}`\n );\n}\n// List of trending movies on HomePage\n\nexport function fetchMovieDetails(movieId) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/movie/${movieId}?api_key=${BASE_KEY}`\n );\n}\n// Movie Details by click\n\nexport function fetchMovieByKeyWord(movie) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/search/movie?api_key=${BASE_KEY}&query=${movie}`\n );\n}\n// Search Movie by name in MoviesPage\n\nexport function fetchMovieCredits(movieId) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/movie/${movieId}/credits?api_key=${BASE_KEY}`\n );\n}\n// Casts on movie's page\n\nexport function fetchMovieReviews(movieId) {\n return fetchWithErrorHandling(\n  `${BASE_URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}`\n );\n}\n// Reviews on movie's page\n","// extracted by mini-css-extract-plugin\nexport default {\"ulHome\":\"pages_ulHome__129Y5\",\"liHome\":\"pages_liHome__eifpZ\",\"linkHome\":\"pages_linkHome__Lu0RR\",\"input\":\"pages_input__mTDRb\",\"button\":\"pages_button__TTU-1\",\"formList\":\"pages_formList__9W1Cr\",\"linkMovie\":\"pages_linkMovie__RjA0T\",\"containerMovie\":\"pages_containerMovie__OvJQu\",\"filmInformation\":\"pages_filmInformation__7FOrl\",\"genres\":\"pages_genres__w5kHH\",\"genresLi\":\"pages_genresLi__yySWV\",\"additionalInformation\":\"pages_additionalInformation__WtEQp\",\"listOfCasts\":\"pages_listOfCasts__o1IAs\"};"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","movieApi","then","console","log","className","s","map","cas","src","profile_path","width","name","character","id","Reviews","review","setReview","results","length","rev","author","content","MoviesDetailsPage","movie","setMovie","navigate","useNavigate","type","onClick","poster_path","alt","height","title","vote_average","overview","genres","genre","to","path","element","BASE_URL","BASE_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieDetails","fetchMovieByKeyWord","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}